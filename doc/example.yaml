services:

#                             NOTE
# =================================================================
# The use of custom Docker container networking would be overkill
# for the current usage. However, because I'll make project to work
# with legacy version of PHP (PHP <= 5.x) so it's safe to do this
# as soon as possible.

  # PHP-FPM container
  vot-app:
    container_name: vot-${BUILD_STAGE}-php # Optional, remove if needed
    networks:
      - vot-network
    build:
      context: .
      dockerfile: docker/php/php.${BUILD_STAGE}.Dockerfile
    volumes:
      - ./src:/var/www/html # Optional, remove if needed
    restart: unless-stopped

  # NGINX container
  vot-web:
    container_name: vot-${BUILD_STAGE}-nginx # Optional, remove if needed
    networks:
      - vot-network
    depends_on:
      - vot-app
      - vot-database
    build:
      context: .
      dockerfile: docker/nginx/nginx.${BUILD_STAGE}.Dockerfile
    volumes:
      - ./src:/var/www/html   # Optional, remove if needed
    ports:
      - "<host-port>:80"      # HTTP
      - "<host-port>:443"     # HTTPS
    restart: unless-stopped   # Optional, remove if needed

  # MariaDB container
  vot-database:
    container_name: vot-${BUILD_STAGE}-mariadb # Optional, remove if needed
    networks:
      - vot-network
    build:
      context: .
      dockerfile: docker/sql/mariadb.${BUILD_STAGE}.Dockerfile
    volumes:
      - vot_data:/var/lib/mysql
    ports:
      - "<host-port>:3306"  # Direct database access without getting inside the
                            # container directly
    environment:
      MARIADB_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    restart: unless-stopped # Optional, remove if needed

volumes:
  vot_data:
    name: vot-${BUILD_STAGE}-database-data # Optional, remove if needed

networks:
  # PHP 8.x network
  vot-network:
    name: vot-${BUILD_STAGE}-latest-network # Optional, remove if needed
    driver: bridge
